package net.jazdw.jnacan.c;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * <i>native declaration : time.h:14</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class timeval extends Structure {
	/**
	 * seconds<br>
	 * C type : __kernel_time_t
	 */
	public NativeLong tv_sec;
	/**
	 * microseconds<br>
	 * C type : __kernel_suseconds_t
	 */
	public NativeLong tv_usec;
	public timeval() {
		super();
	}
	public timeval(Pointer ptr) {
        super(ptr);
    }
	protected List<? > getFieldOrder() {
		return Arrays.asList("tv_sec", "tv_usec");
	}
	 /**
     * @param tv_sec seconds<br>
     * C type : __kernel_time_t<br>
     * @param tv_usec microseconds<br>
     * C type : __kernel_suseconds_t
     */
	public timeval(long tv_sec, long tv_usec) {
        super();
        this.tv_sec = new NativeLong(tv_sec);
        this.tv_usec = new NativeLong(tv_usec);
    }
	/**
	 * @param tv_sec seconds<br>
	 * C type : __kernel_time_t<br>
	 * @param tv_usec microseconds<br>
	 * C type : __kernel_suseconds_t
	 */
	public timeval(NativeLong tv_sec, NativeLong tv_usec) {
		super();
		this.tv_sec = tv_sec;
		this.tv_usec = tv_usec;
	}
	public static class ByReference extends timeval implements Structure.ByReference {
		
	};
	public static class ByValue extends timeval implements Structure.ByValue {
		
	};
}
